{
  "hash": "9493bec36820b792140e65a9edd31e0e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Translates help documentation to another language\"\nexecute:\n  eval: true\n  freeze: true\n---\n\n## lang_help\n\n## Description\nTranslates a given topic into a target language. It uses the `lang` argument to determine which language to translate to. If not passed, this function will look for a target language in the LANG and LANGUAGE environment variables, or if something has been passed to the `.lang` argument in `lang_use()`, to determine the target language. If the target language is English, no translation will be processed, so the help returned will be the original package's documentation.\n\n\n## Usage\n```r\nlang_help(topic, package = NULL, lang = NULL, type = getOption(\"help_type\"))\n```\n\n## Arguments\n|Arguments|Description|\n|---|---|\n| topic | A character vector of the topic to search for. |\n| package | The R package to look for the topic, if not provided the function will attempt to find the topic based on the loaded packages. |\n| lang | A character vector language to translate the topic to |\n| type | Produce \"html\" or \"text\" output for the help. It defaults to `getOption(\"help_type\")` |\n\n\n## Value\nOriginal or translated version of the help documentation in the output type specified\n\n\n\n\n\n\n## Examples\n\n::: {.cell}\n\n```{.r .cell-code}\n\n\nlibrary(lang)\n\nlang_use(\"ollama\", \"llama3.2\", seed = 100)\n#> Model: llama3.2 via Ollama\n#> Lang: en_US.UTF-8\n\nlang_help(\"lang_help\", lang = \"spanish\", type = \"text\")\n#> \"_\bT_\br_\ba_\bd_\bu_\bc_\be _\bl_\ba _\bd_\bo_\bc_\bu_\bm_\be_\bn_\bt_\ba_\bc_\bi_\bó_\bn _\bd_\be _\ba_\by_\bu_\bd_\ba _\ba _\bo_\bt_\br_\bo _\bi_\bd_\bi_\bo_\bm_\ba\"\n#> \n#> _\bD_\be_\bs_\bc_\br_\bi_\bp_\bt_\bi_\bo_\bn:\n#> \n#>      Aqui se puede traducir un tema dado a un idioma objetivo. Utiliza\n#>      la argumento 'lang' para determinar qué idioma usar para la\n#>      traducción. Si no se pasa, esta función buscará un idioma objetivo\n#>      en las variables de entorno LANG y LANGUAGE, o si se ha pasado\n#>      algo a la función '.lang' en 'lang_use()', para determinar el\n#>      idioma objetivo. Si el idioma objetivo es inglés, no se procesará\n#>      ninguna traducción, por lo que la ayuda devuelta será la\n#>      documentación original del paquete.\n#> \n#> _\bU_\bs_\ba_\bg_\be:\n#> \n#>      lang_help(topic, package = NULL, lang = NULL, type = getOption(\"help_type\"))\n#>      \n#> _\bA_\br_\bg_\bu_\bm_\be_\bn_\bt_\bs:\n#> \n#>    topic: Caracter vector de el tema a buscar.\n#> \n#>  package: El paquete de R para buscar el tema, si no se proporciona la\n#>           función intentará encontrar el tema basado en los paquetes\n#>           cargados.\n#> \n#>     lang: Un carácter vector de idioma para traducir el tema a.\n#> \n#>     type: Producir \"html\" o \"text\" como salida para la ayuda. Se\n#>           establece por defecto en 'getOption(\"help_type\")'.\n#> \n#> _\bE_\bx_\ba_\bm_\bp_\bl_\be_\bs:\n#> \n#>      library(lang)\n#>      \n#>      lang_use(\"ollama\", \"llama3.2\", seed = 100)\n#>      \n#>      lang_help(\"lang_help\", lang = \"spanish\", type = \"text\")\n#> \n```\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}